package testGraph;

import static org.junit.Assert.*;
import junit.framework.TestCase;
import junit.framework.TestSuite;
import graph.Punkt;
import graph.PunktException;

import org.hamcrest.core.IsInstanceOf;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;

public class TestSuitePunkt  {

	
	/**
	 * Tests auf korrekte Funktion Instanzieren
	 */
	@Test
	public void ErzeugenGetName() {
		try {
			String name = "Name";
			int x = 12;
			int y = 14;
			Punkt p = new Punkt(name,x,y);
			assertEquals(p.getName(), name);
		} catch (PunktException e) {
			fail("Fehler");
	 }
	}
	
	
	@Test
	public void ErzeugenGetPosX() {
		
		try {
			String name = "Name";
			int x = 12;
			int y = 14;
			Punkt p = new Punkt(name,x,y);
			assertEquals(p.getPosX(), x);
		} catch (PunktException e) {
			fail("Fehler");
	 }
		
	}

	@Test
	public void ErzeugenGetPosY() {
		try {
			String name = "Name";
			int x = 12;
			int y = 14;
			Punkt p = new Punkt(name,x,y);
			assertEquals(p.getPosY(), y);
		} catch (PunktException e) {
			fail("Fehler");
	 }
	}
	
	/**
	 * Auf erwartete Ausnahmanen hin prüfen
	 * Name null oder "", PosX oder PosY oder beide !>0
	 */
	
	@Test (expected=PunktException.class)
	public void ErzeugenExceptionNameEmpty() throws Exception{
		String name = "";
		int x = 12;
		int y = 14;
		Punkt p = new Punkt(name,x,y);
	}
	
	@Test (expected=PunktException.class)
	public void ErzeugenExceptionNameNull() throws Exception{
		String name = null;
		int x = 12;
		int y = 14;
		Punkt p = new Punkt(name,x,y);
	}
	
	@Test (expected=PunktException.class)
	public void ErzeugenExceptionPosXZero() throws Exception{
		String name = "";
		int x = 0;
		int y = 14;
		Punkt p = new Punkt(name,x,y);
	}
	@Test (expected=PunktException.class)
	public void ErzeugenExceptionPosXlessZero() throws Exception{
		String name = "";
		int x = -10;
		int y = 14;
		Punkt p = new Punkt(name,x,y);
	}
	@Test (expected=PunktException.class)
	public void ErzeugenExceptionPosYZero() throws Exception{
		String name = "";
		int x = 10;
		int y = 0;
		Punkt p = new Punkt(name,x,y);
	}
	@Test (expected=PunktException.class)
	public void ErzeugenExceptionPosYlessZero() throws Exception{
		String name = "";
		int x = 10;
		int y = -14;
		Punkt p = new Punkt(name,x,y);
	}
	
	
	/**
	 * Test der Methode setX setY
	 */
	
	@Test
	public void MethodeSetPosXPositiv() {
		String name = "Name";
		int x = 12;
		int y = 14;
		int newX = 15;
		try {
			Punkt p = new Punkt(name,x,y);
			p.setPosX(newX);
			assertEquals(p.getPosX(),newX);
		} catch (PunktException e) {
			fail("Problem bei der Instanzerung");
		}
	}
	
	@Test
	public void MethodeSetPosYPositiv() {
		String name = "Name";
		int x = 12;
		int y = 14;
		int newY = 15;
		try {
			Punkt p = new Punkt(name,x,y);
			p.setPosY(newY);
			assertEquals(p.getPosY(),newY);
		} catch (PunktException e) {
			fail("Problem bei der Instanzerung");
		}
	}

	@Test
	public void testSetPoxY() {
		fail("Not yet implemented");
	}

	@Test
	public void testAddVerbindung() {
		fail("Not yet implemented");
	}

	@Test
	public void testRemoveVerbindung() {
		fail("Not yet implemented");
	}

	@Test
	public void testGetNachbarn() {
		fail("Not yet implemented");
	}

}
