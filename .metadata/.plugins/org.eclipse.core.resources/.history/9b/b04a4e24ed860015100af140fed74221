package graph;

import java.util.Collection;

public class Punkt implements InterfacePunkt {

	private String name;
	private int posX;
	private int posY;
	
	public Punkt(String name, int posX, int posY) throws PunktException{
		
		if (name == null || name.equals("")) throw new PunktException();
		if (posX < 1 || posY < 1)	throw new PunktException();
		assert name != null && !name.equals("") : "Namen darf nicht leer oder null sein ";
		assert posX > 0 && posY > 0 : "Position muss positiv sein.";
		this.name = name;
		this.posX = posX;
		this.posY = posY;
	}
	
	@Override
	public String getName() {
		return name;
	}

	@Override
	public int getPosX() {
		return posX;
	}

	@Override
	public int getPosY() {
		return posY;
	}

	@Override
	public void setPosX(int newX) throws PunktException {
		// TODO Auto-generated method stub

	}

	@Override
	public void setPosY(int newY) throws PunktException {
		// TODO Auto-generated method stub

	}

	@Override
	public void addVerbindung(Verbindung<InterfacePunkt> verbindung)
			throws VerbindungsException {
		// TODO Auto-generated method stub

	}

	@Override
	public void removeVerbindung(Verbindung<InterfacePunkt> verbindung)
			throws VerbindungsException {
		// TODO Auto-generated method stub

	}

	@Override
	public Collection<Verbindung<InterfacePunkt>> getNachbarn() {
		// TODO Auto-generated method stub
		return null;
	}

}
