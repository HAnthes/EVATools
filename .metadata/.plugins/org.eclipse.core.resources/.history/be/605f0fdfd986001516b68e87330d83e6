package testGraph;

import static org.junit.Assert.*;
import graph.Punkt;
import graph.PunktException;

import org.hamcrest.core.IsInstanceOf;
import org.junit.Rule;
import org.junit.Test;
import org.junit.rules.ExpectedException;

public class TestSuitePunkt {

	
	/**
	 * Tests auf korrekte Funktion (Rauchtest)
	 */
	@Test
	public void testGetName() {
		try {
			String name = "Name";
			int x = 12;
			int y = 14;
			Punkt p = new Punkt(name,x,y);
			assertEquals(p.getName(), name);
		} catch (PunktException e) {
			fail("Fehler");
	 }
	}
	
	
	@Test
	public void testGetPosX() {
		
		try {
			String name = "Name";
			int x = 12;
			int y = 14;
			Punkt p = new Punkt(name,x,y);
			assertEquals(p.getPosX(), x);
		} catch (PunktException e) {
			fail("Fehler");
	 }
		
	}

	@Test
	public void testGetPosY() {
		try {
			String name = "Name";
			int x = 12;
			int y = 14;
			Punkt p = new Punkt(name,x,y);
			assertEquals(p.getPosY(), y);
		} catch (PunktException e) {
			fail("Fehler");
	 }
	}
	
	/**
	 * Auf erwartete Ausnahmanen hin prüfen
	 * Name null oder "", PosX oder PosY oder beide !>0
	 */
	@Rule
	public ExpectedException thrown = ExpectedException.none();
	
	@Test
	public void testExceptionName(){
		String name = "";
		int x = 12;
		int y = 14;
		thrown.expect(PunktException.class);
		Punkt p = new Punkt(name,x,y);
		fail("Fehler Name ist leer");
		}
	
	
	
	
	@Test
	public void testSetPoxX() {
		fail("Not yet implemented");
	}

	@Test
	public void testSetPoxY() {
		fail("Not yet implemented");
	}

	@Test
	public void testAddVerbindung() {
		fail("Not yet implemented");
	}

	@Test
	public void testRemoveVerbindung() {
		fail("Not yet implemented");
	}

	@Test
	public void testGetNachbarn() {
		fail("Not yet implemented");
	}

}
