package testGraph;

import static org.junit.Assert.*;

import graph.Punkt;
import graph.PunktException;
import org.junit.Test;

public class TestPunktConstructor  {

	
	/**
	 * Positivtest Äquivalenzklassen 
	 * PosX	:  > 0
	 * PosY :  > 0
	 * Name :  != "" || null
	 * Testfälle 
	 * 
	 * Rand PosX 
	 * 	Name :  Test
	 * 	PosX :  1
	 * 	PosY : 10
	 * 
	 * Rand PosY
	 * 	Name : Test
	 * 	PosX : 10
	 *  PosY : 1
	 *  
	 * Allgemein
	 * 	Name : Test
	 * 	PosX : 23
	 * 	PosY : 12
	 * 
	 * Test über die Getter.	
	 * 
	 */
	@Test
	public void ÄquivalenzklassenPositiv() {
		try {
			//Rand X
			String name = "Test";
			int x = 1;
			int y = 10;
			Punkt p = new Punkt(name,x,y);
			assertEquals(p.getName(), name);
			assertTrue(p.getPosX() == x);
			assertTrue(p.getPosY() == y);
			
			p = null;
			assertNull(p);
			
			//Rand Y
			x = 10;
			y = 1;
			p = new Punkt(name,x,y);
			assertEquals(p.getName(), name);
			assertTrue(p.getPosX() == x);
			assertTrue(p.getPosY() == y);
			
			p = null;
			assertNull(p);
			
			//Allgemein
			x = 23;
			y = 12;
			p = new Punkt(name,x,y);
			assertEquals(p.getName(), name);
			assertTrue(p.getPosX() == x);
			assertTrue(p.getPosY() == y);
			
			
		} catch (PunktException e) {
			fail("Fehler");
	 }
	}
	
	
	@Test
	public void ErzeugenGetPosX() {
		
		try {
			String name = "Name";
			int x = 12;
			int y = 14;
			Punkt p = new Punkt(name,x,y);
			assertTrue(p.getPosX() == x);
		} catch (PunktException e) {
			fail("Fehler");
	 }
		
	}

	@Test
	public void ErzeugenGetPosY() {
		try {
			String name = "Name";
			int x = 12;
			int y = 14;
			Punkt p = new Punkt(name,x,y);
			assertTrue(p.getPosY() == y);
		} catch (PunktException e) {
			fail("Fehler");
	 }
	}
	
	/**
	 * Auf erwartete Ausnahmanen hin prüfen
	 * Name null oder "", PosX oder PosY oder beide !>0
	 */
	
	@Test (expected=PunktException.class)
	public void ErzeugenExceptionNameEmpty() throws Exception{
		String name = "";
		int x = 12;
		int y = 14;
		Punkt p = new Punkt(name,x,y);
		assertNull(p);
	}
	
	@Test (expected=PunktException.class)
	public void ErzeugenExceptionNameNull() throws Exception{
		String name = null;
		int x = 12;
		int y = 14;
		Punkt p = new Punkt(name,x,y);
		assertNull(p);
	}
	
	@Test (expected=PunktException.class)
	public void ErzeugenExceptionPosXZero() throws Exception{
		String name = "Name";
		int x = 0;
		int y = 14;
		Punkt p = new Punkt(name,x,y);
		assertNull(p);
	}
	
	@Test (expected=PunktException.class)
	public void ErzeugenExceptionPosXlessZero() throws Exception{
		String name = "Name";
		int x = -10;
		int y = 14;
		Punkt p = new Punkt(name,x,y);
		assertNull(p);
	}
	
	@Test (expected=PunktException.class)
	public void ErzeugenExceptionPosYZero() throws Exception{
		String name = "Name";
		int x = 10;
		int y = 0;
		Punkt p = new Punkt(name,x,y);
		assertNull(p);
	}
	
	@Test (expected=PunktException.class)
	public void ErzeugenExceptionPosYlessZero() throws Exception{
		String name = "Name";
		int x = 10;
		int y = -14;
		Punkt p = new Punkt(name,x,y);
		assertNull(p);
	}

}
